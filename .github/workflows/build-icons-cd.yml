name: build-icons-cd

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: ðŸ›Ž Check out master
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 1
          path: ./iconos
      - name: ðŸŽ© Instalamos dependencias
        working-directory: /tmp
        run: |
          sudo apt install libjpeg-dev libtiff5-dev libpng-dev libfreetype6-dev libgif-dev libgtk-3-dev libxml2-dev libpango1.0-dev libcairo2-dev libspiro-dev python3-dev ninja-build cmake build-essential gettext
          sudo apt install zlib1g-dev
          git clone https://github.com/fontforge/fontforge.git fontforge && cd fontforge && mkdir build && cd build && sudo cmake -GNinja .. && sudo ninja && sudo ninja install
          git clone https://github.com/bramstein/sfnt2woff-zopfli.git sfnt2woff-zopfli && cd sfnt2woff-zopfli && make && mv sfnt2woff-zopfli /usr/local/bin/sfnt2woff
          git clone --recursive https://github.com/google/woff2.git && cd woff2 && make clean all && sudo mv woff2_compress /usr/local/bin/ && sudo mv woff2_decompress /usr/local/bin/
      - name: ðŸŽ© Instalamos Fontcustom 
        working-directory: ./iconos
        run: |
          sudo gem install bundler fontcustom
          sudo bundle install
      - name: ðŸ§¹ Clean site
        run: |
          if [ -d "docs" ]; then
            rm -rf docs/*
          fi
      - name: ðŸŽ© Compilamos los Ã­conos
        working-directory: ./iconos
        run: bundle exec fontcustom compile -F
      - name: ðŸ”¨ Instalamos dependencias para la documentaciÃ³n
        working-directory: ./iconos
        run: |
          cp favicon.ico ./docs/.
      - name: ðŸ§ª Deploy build
        working-directory: ./iconos
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -am "ðŸ§ª Deploy with ${GITHUB_WORKFLOW}"
          git push --all -f https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
      - name: Checkout Poncho
        uses: actions/checkout@v4.1.5
        with: 
          repository: argob/poncho
          ref: 'release-1.x'
          path: ./poncho

      - name: Copiamos archivos generados en el otro repo
        run: |
          echo "Copying..."
          cp -R ./iconos/dist/css/icono-arg.css ./poncho/dist/css/
          cp -R ./iconos/docs/icono-arg.json ./poncho/dist/jsons/icono-arg.json
      - name: ðŸ§ª Push Iconos Arg.
        working-directory: ./poncho
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -am "ðŸ§ª Deploy iconos-arg with ${GITHUB_WORKFLOW}"
          git push --all -f https://${{ secrets.GITHUB_TOKEN }}@github.com/argob/poncho.git

#      - name: Push Project B
#        run: |
#          cd ./poncho
#          git add .
#          git config user.name "${GITHUB_ACTOR}"
#          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
#          git commit -am "File Replicated from Iconos"
#          git push